{"version":3,"sources":["./src/environments/environment.ts","./src/app/service/crud-data.service.ts","./src/app/components/add-student/add-student.component.ts","./src/app/components/add-student/add-student.component.html","./src/app/components/update-student/update-student.component.ts","./src/app/components/update-student/update-student.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/student-list/student-list.component.html","./src/app/components/student-list/student-list.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Student } from './Student';\n// import { Student_data } from '../../../node-rest-api/model/Student_data.js'\nimport { catchError, map } from 'rxjs/operators';\nimport { Observable, ObservableInput, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudDataService {\n\n  // Node/Express API\n  REST_API: String = 'http://localhost:8000/api/';\n\n  // Http Header\n  httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n  handleError: (err: any, caught: Observable<any>) => ObservableInput<any>;\n\n  constructor(private httpClient: HttpClient) { }\n\n  // Add-Student\n  AddStudent(data: Student): Observable<any> {\n    let API_URL = `${this.REST_API}/add-student`;\n    return this.httpClient.post(API_URL, data)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  //Get All Student Data\n  getAllStudent(){\n    return this.httpClient.get(`${this.REST_API}`);\n  }\n\n  //get single student data\n  getAllStudentsData(id:any): Observable<any>{\n    let API_URL = `${this.REST_API}/student-data/${id}`;\n    return this.httpClient.get(API_URL, { headers: this.httpHeaders })\n      .pipe(map((res: any) => {\n          return res || {}\n        }),\n        catchError(this.handleError)\n      )\n  }\n\n  //update the existing student data\n  updateStudent(id:any, data:any): Observable<any>{\n    let API_URL = `${this.REST_API}/update-student/${id}`;\n    return this.httpClient.put(API_URL, data, { headers: this.httpHeaders })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  //delete the student data\n  deleteStudent(id:any): Observable<any>{\n    let API_URL = `${this.REST_API}/delete-student/${id}`;\n    return this.httpClient.delete(API_URL, { headers: this.httpHeaders}).pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  //delete all student\n  deleteStudentAll(): Observable<any>{    \n    let API_URL = `${this.REST_API}/delete-student-all/`;\n    return this.httpClient.delete(API_URL);\n  }\n\n  //search by name\n  searchByName(name): Observable<any>{\n    return this.httpClient.get(`${this.REST_API}/find-student/?name=${name}`);\n  }\n\n}\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CrudDataService } from './../../service/crud-data.service';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit {\n\n  studentForm: FormGroup;\n\n  constructor(public formBuilder: FormBuilder, private router: Router, private ngZone: NgZone, private crudDataService: CrudDataService) \n    { \n\n       this.studentForm = this.formBuilder.group({\n         name: [''],\n         age:[''],\n         email:[''],\n         gender:[''],\n         phone:[''],\n         std:[''],\n         address:['']\n       })\n    }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): any {\n    this.crudDataService.AddStudent(this.studentForm.value)\n    .subscribe(() => {\n        console.log('Data added successfully!')\n        this.ngZone.run(() => this.router.navigateByUrl('/student-list'))\n      }, (err) => {\n        console.log(err);\n    });\n  }\n\n}\n","<div class=\"row justify-content-center mt-5\">\n    <div class=\"col-md-4\">\n        <form [formGroup]=\"studentForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label>Name</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"Enter your name\" required>\n          </div>\n  \n          <div class=\"form-group\">\n            <label>Age</label>\n            <input class=\"form-control\" type=\"number\" formControlName=\"age\" placeholder=\"Enter your age\" required>\n          </div>\n  \n          <div class=\"form-group\">\n            <label>Email</label>\n            <input class=\"form-control\" type=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"gender\">Gender</label>\n            <div class=\"radio inline\">\n                <input type=\"radio\" style=\"margin: 10px;\" id=\"radio-2\" name=\"gender\" value=\"Male\" formControlName=\"gender\">\n                <label for=\"radio-2\" class=\"radio-label\">Male</label>\n\n                <input type=\"radio\" style=\"margin: 10px;\" id=\"radio-3\" name=\"gender\" value=\"Female\" formControlName=\"gender\">\n                <label for=\"radio-3\" class=\"radio-label\">Female</label>\n            </div>\n   \n            <!-- <div class=\"radio inline\">\n                \n            </div> -->\n        </div>\n\n          <div class=\"form-group\">\n            <label>Phone No</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"phone\" placeholder=\"Enter your phone\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Class</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"std\" placeholder=\"Enter your class\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Address</label>\n            <textarea class=\"form-control\" type=\"text\" formControlName=\"address\" placeholder=\"Enter your address\" required>\n            </textarea>\n          </div>\n  \n          <div class=\"form-group\">\n            <button class=\"btn btn-primary\" type=\"submit\">Save</button>\n          </div>\n        </form>\n    </div>\n  </div>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CrudDataService } from './../../service/crud-data.service';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-update-student',\n  templateUrl: './update-student.component.html',\n  styleUrls: ['./update-student.component.css']\n})\nexport class UpdateStudentComponent implements OnInit {\n\n  getId: any;\n  updateForm: FormGroup;\n\n  constructor(public formBuilder: FormBuilder, private router: Router, private ngZone: NgZone, private activatedRoute: ActivatedRoute, private crudDataService: CrudDataService) {\n\n    this.getId = this.activatedRoute.snapshot.paramMap.get('id');\n\n    this.crudDataService.getAllStudentsData(this.getId).subscribe(res => {\n      this.updateForm.setValue({\n        name: res['name'],\n        age: res['age'],\n        email: res['email'],\n        gender: res['gender'],\n        phone: res['phone'],\n        std: res['std'],\n        address: res['address'],\n      });\n    });\n\n    this.updateForm = this.formBuilder.group({\n      name: [''],\n      age: [''],\n      email: [''],\n      gender: [''],\n      phone: [''],\n      std: [''],\n      address: [''],\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n  onUpdate(): any {\n    this.crudDataService.updateStudent(this.getId, this.updateForm.value)\n    .subscribe(() => {\n        console.log('Data updated successfully!')\n        this.ngZone.run(() => this.router.navigateByUrl('/student-list'))\n      }, (err) => {\n        console.log(err);\n    });\n  }\n\n}\n","<div class=\"row justify-content-center mt-5\">\n    <div class=\"col-md-4\">\n      <form [formGroup]=\"updateForm\" (ngSubmit)=\"onUpdate()\">\n        <div class=\"form-group\">\n            <label>Name</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"Enter your name\" required>\n          </div>\n  \n          <div class=\"form-group\">\n            <label>Age</label>\n            <input class=\"form-control\" type=\"number\" formControlName=\"age\" placeholder=\"Enter your age\" required>\n          </div>\n  \n          <div class=\"form-group\">\n            <label>Email</label>\n            <input class=\"form-control\" type=\"email\" formControlName=\"email\" placeholder=\"Enter your email\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"gender\">Gender</label>\n            <div class=\"radio inline\">\n                <input type=\"radio\" id=\"radio-2\" name=\"gender\" value=\"Male\" formControlName=\"gender\">\n                <label for=\"radio-2\" class=\"radio-label\">Male</label>\n            </div>\n   \n            <div class=\"radio inline\">\n                <input type=\"radio\" id=\"radio-3\" name=\"gender\" value=\"Female\" formControlName=\"gender\">\n                <label for=\"radio-3\" class=\"radio-label\">Female</label>\n            </div>\n        </div>\n\n          <div class=\"form-group\">\n            <label>Phone No</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"phone\" placeholder=\"Enter your phone\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Class</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"std\" placeholder=\"Enter your class\" required>\n          </div>\n\n          <div class=\"form-group\">\n            <label>Address</label>\n            <textarea class=\"form-control\" type=\"text\" formControlName=\"address\" placeholder=\"Enter your address\" required></textarea>\n          </div>\n  \n        <div class=\"form-group\">\n          <button class=\"btn btn-primary btn-block\" type=\"submit\">Update</button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CURD-MEAN';\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\">Student Management System</a>\n\n  <div id=\"navbarNav\" class=\"collapse navbar-collapse\">\n    <ul class=\"navbar-nav ml-auto \">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/student-list\">Show Data</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/add-student\">Add Data</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>","<div class=\"container\">\n    <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n      <h4>Student List</h4>\n      <div class=\"input-group ml-5\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search by name\" (ngModel)=\"name\">\n            <div class=\"input-group-append\">\n              <button class=\"btn btn-primary ml-3\" type=\"button\" (click)=\"searchByName(name)\">Search</button>\n            </div>\n      </div>\n      <button class=\"btn btn-sm btn-danger\" (click)=\"deleteAll()\">Delete All</button>\n    </div>\n  \n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <!-- <th class=\"text-center\" scope=\"col\">Id</th> -->\n            <th class=\"text-center\" scope=\"col\">Name</th>\n            <th class=\"text-center\" scope=\"col\">Age</th>\n            <th class=\"text-center\" scope=\"col\">Email</th>\n            <th class=\"text-center\" scope=\"col\">Gender</th>\n            <th class=\"text-center\" scope=\"col\">Phone</th>\n            <th class=\"text-center\" scope=\"col\">Class</th>\n            <th class=\"text-center\" scope=\"col\">Address</th>\n            <th class=\"text-center\" scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let student of Students; let i = index\">\n            <!-- <th scope=\"row\">{{student._id}}</th> -->\n            <td class=\"text-center\">{{student.name}}</td>\n            <td class=\"text-center\">{{student.age}}</td>\n            <td class=\"text-center\">{{student.email}}</td>\n            <td class=\"text-center\">{{student.gender}}</td>\n            <td class=\"text-center\">{{student.phone}}</td>\n            <td class=\"text-center\">{{student.std}}</td>\n            <td class=\"text-center\">{{student.address}}</td>\n            <td class=\"text-center\">\n              <button class=\"btn btn-sm btn-primary mx-2\" routerLink=\"/edit-student/{{student._id}}\">Edit</button>\n              <button class=\"btn btn-sm btn-danger\" (click)=\"delete(student._id, i)\">Delete</button>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { CrudDataService } from './../../service/crud-data.service';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  Students: any = [];\n  name = '';\n  currentStudent = null;\n  currentIndex = -1;\n  students: any;\n\n  constructor(private crudDataService: CrudDataService) { }\n  ngOnInit(): void {\n    this.crudDataService.getAllStudent().subscribe(res => {\n      console.log(res)\n      this.Students =res;\n  });\n}\n\nrefresh(): void{\n  this.ngOnInit();\n  this.currentStudent = null;\n  this.currentIndex = -1;\n}\n\nsetCurrentStudent(student, index): void {\n  this.currentStudent = student;\n  this.currentIndex = index;\n}\n\ndelete(id:any, i:any) {\n  console.log(id);\n  if(window.confirm('Do you want to go ahead?')) {\n    this.crudDataService.deleteStudent(id).subscribe((res) => {\n      this.Students.splice(i, 1);\n    })\n  }\n}\n\ndeleteAll(): void{\n  if(window.confirm('Do you want to really delete all the records')){\n    this.crudDataService.deleteStudentAll().subscribe((res) =>{\n      console.log(res);\n      // this.showAllData();\n      this.ngOnInit();\n    })\n   }   \n  }\n\nsearchByName(name): void{\n  this.crudDataService.searchByName(name).subscribe(\n    students =>{\n      this.students = students;\n      console.log(students);\n    },\n    error =>{\n      console.log(error);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddStudentComponent } from './components/add-student/add-student.component';\nimport { UpdateStudentComponent } from './components/update-student/update-student.component';\nimport { StudentListComponent } from './components/student-list/student-list.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddStudentComponent,\n    UpdateStudentComponent,\n    StudentListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddStudentComponent } from './components/add-student/add-student.component';\nimport { StudentListComponent } from './components/student-list/student-list.component';\nimport { UpdateStudentComponent } from './components/update-student/update-student.component';\n\nconst routes: Routes = [\n  {path: '', pathMatch:'full',redirectTo:'add-student'},\n  {path: 'student-list', component: StudentListComponent},\n  {path: 'add-student', component: AddStudentComponent},\n  {path: 'edit-student/:id',component: UpdateStudentComponent}\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}